hugo_env: &hugo_env
  BASE_URL: http://buket-restaurant.s3-website-us-east-1.amazonaws.com

# ------------------------------
# Pipeline de build + packager
# ------------------------------
kind: pipeline
type: docker
name: hugo-build-and-upload

steps:
  # Build Hugo
  - name: hugo-build
    image: peaceiris/hugo:v0.65.3-mod
    environment:
      <<: *hugo_env
    commands:
      - hugo --baseURL $BASE_URL

  # Packager en tar.gz
  - name: package-build
    image: alpine:latest
    commands:
      - tar -czf build-${DRONE_COMMIT_SHA}.tar.gz -C public .

  # Upload compressé vers S3 (archive de build)
  - name: upload-to-s3
    image: amazon/aws-cli:2.13.7
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_SESSION_TOKEN:
        from_secret: aws_session_token
      AWS_DEFAULT_REGION: us-east-1
    commands:
      - aws s3 cp build-${DRONE_COMMIT_SHA}.tar.gz s3://buket-restaurant-release/builds/${DRONE_COMMIT_SHA}.tar.gz

trigger:
  branch:
    - master
  event:
    - push
    - custom

---
kind: pipeline
type: docker
name: promote-to-environment

steps:
  # 1️⃣ Définir la target à partir du paramètre
  - name: set-target
    image: alpine:latest
    environment:
      TARGET_ENV: ${TARGET_ENV}  # Drone injecte le paramètre
    commands:
      - echo "Deploying to $TARGET_ENV environment"

  # 2️⃣ Récupérer le tar.gz du build choisi
  - name: download-build
    image: amazon/aws-cli:2.13.7
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_SESSION_TOKEN:
        from_secret: aws_session_token
      AWS_DEFAULT_REGION: us-east-1
      TARGET_ENV: ${TARGET_ENV}
    commands:
      - aws s3 cp s3://buket-restaurant-release/builds/${DRONE_TAG}.tar.gz ./build.tar.gz
      - mkdir -p public
      - tar -xzf build.tar.gz -C public

  # 3️⃣ Déployer le build sur le bucket correspondant
  - name: deploy-to-s3
    image: amazon/aws-cli:2.13.7
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_SESSION_TOKEN:
        from_secret: aws_session_token
      AWS_DEFAULT_REGION: us-east-1
      TARGET_ENV: ${TARGET_ENV}
    commands:
      - |
        if [ "$TARGET_ENV" = "production" ]; then
          aws s3 sync public/ s3://buket-restaurant --delete
        else
          aws s3 sync public/ s3://buket-restaurant-${TARGET_ENV} --delete
        fi

trigger:
  event:
    - promote

# ------------------------------
# Paramètres de promote
# ------------------------------
parameters:
  TARGET_ENV:
    description: "Target environment to deploy (production, staging, etc.)"
    default: "production"
